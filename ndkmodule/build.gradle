// apply from: '../local.properties'
apply plugin: 'com.android.library'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        // applicationId "co.optonaut.ndkmodule"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"

        // These directives will be used to tell Android studio how to compile your library

        // We need to set the libs dir for the output and the srcdirs to null to
        // prevent the gradle ndk hooks from firing.  We need to depend on Android.mk
        // NOTE: this appears to break the android studio 'android' project view
        // (at least, it hides the jni directory…)
        sourceSets {
            main {
                //Tell Gradle where to put the compiled library
                jniLibs.srcDirs = ['src/main/libs']

                //hide the ‘jni’ folder so that the automatic gradle build doesn’t try to run
                //it’s own ndk-build process
                jni.srcDirs = [];
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // Tell Gradle the run the ndkBuild task when compiling
    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }

    // This task utilizes the Android.mk file defined in src/main/jni so that you
    // have more control over the build parameters (like library inclusion)
    task ndkBuild(type: Exec) {
        // start in directory file('src/main/jni').absolutePath
        // have gradle.properties in same directory as this file with following lines
        // ndk_build_path=/home/transcendent/android-ndk/ndk-build
        // ndk_module_path=NDK_MODULE_PATH=/home/transcendent/projects/Optonaut/ndkmodule/ndksubmodules
        commandLine ndk_build_path, ndk_module_path, '-C', file('src/main/jni').absolutePath
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile files('libs/VrApi.jar')
    compile files('libs/VrAppFramework.jar')
    compile files('libs/SystemUtils.jar')
}
